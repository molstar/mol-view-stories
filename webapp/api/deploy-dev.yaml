apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mol-view-stories-api-ingress-dev
  namespace: mol-view-stories-ns
  labels:
    app: mol-view-stories-dev-api
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.org/client-max-body-size: "50m"
spec:
  rules:
    - host: mol-view-stories-dev.dyn.cloud.e-infra.cz
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: mol-view-stories-api-svc-dev
                port:
                  number: 5000
  tls:
    - hosts:
        - mol-view-stories-dev.dyn.cloud.e-infra.cz
      secretName: mol-view-stories-api-tls-dev
---
apiVersion: v1
kind: Service
metadata:
  name: mol-view-stories-api-svc-dev
  namespace: mol-view-stories-ns
  labels:
    app: mol-view-stories-dev-api
spec:
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
      name: http
  selector:
    app: mol-view-stories-dev-api
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mol-view-stories-dev-api
  namespace: mol-view-stories-ns
  labels:
    app: mol-view-stories-dev-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mol-view-stories-dev-api
  template:
    metadata:
      labels:
        app: mol-view-stories-dev-api
    spec:
      imagePullSecrets:
        - name: cerit-registry-secret
      containers:
        - name: mol-view-stories-dev-api-container
          image: cerit.io/mol-view-stories/mvs-api:latest
          ports:
            - containerPort: 5000
              name: http
          env:
            - name: ENVIRONMENT
              value: "development"
          readinessProbe:
            httpGet:
              path: /ready
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m" 