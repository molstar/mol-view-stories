server {
    listen 8080;
    server_name mol-view-stories-ui-dev.dyn.cloud.e-infra.cz;

    # Trust ingress headers
    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;

    port_in_redirect off;

    root /usr/share/nginx/html;
    index index.html;

    # --- Asset handling ---

    # Remove trailing slashes from static assets specifically
    rewrite ^(/mol-view-stories/_next/.*)/$ $1 permanent;

    # Serve Next.js _next assets - strip basePath and serve from root
    location ~ ^/mol-view-stories/_next/(.*)$ {
        try_files /_next/$1 =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Serve static assets - strip basePath and serve from root
    location ~ ^/mol-view-stories/static/(.*)$ {
        try_files /static/$1 =404;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # --- Redirects to basePath ---

    # Redirect root path "/" → /mol-view-stories/
    location = / {
        return 301 $scheme://$host/mol-view-stories/;
    }

    # Redirect specific first-level routes to basePath
    # e.g. /auth → /mol-view-stories/auth
    #      /my-stories → /mol-view-stories/my-stories
    location ~ ^/(auth|my-stories)(.*)$ {
        return 301 $scheme://$host/mol-view-stories/$1$2$is_args$args;
    }

    # --- App serving ---

    # Handle mol-view-stories root
    location = /mol-view-stories/ {
        try_files /index.html =404;
    }

    # Redirect /mol-view-stories (no slash) → with slash
    location = /mol-view-stories {
        return 301 $scheme://$host/mol-view-stories/;
    }

    # Serve app pages (SPA fallback)
    location ~ ^/mol-view-stories/(.*)$ {
        try_files /$1 /$1/ /index.html;
    }

    # --- Health check for Kubernetes ---
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # --- Security headers ---
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";

    # --- Ensure clean host (strip :8080) ---
    set $clean_host $host;
    if ($host ~ ^(.+):8080$) {
        set $clean_host $1;
    }

    proxy_set_header Host $clean_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port 443; # force public HTTPS port
    proxy_set_header X-Forwarded-Host $clean_host;
}
